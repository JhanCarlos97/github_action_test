name: CI/CD Cube JS EC2

on:
  push:
    branches: [ master ]
    paths: ['CubeJS/schema/**', 'CubeJS/cube.js']
    

jobs:

  copy_to_S3:
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY : ${{secrets.AWS_SECRET_ACCESS_KEY}}
      S3_BUCKET : ${{secrets.S3_BUCKET}}

    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{env.AWS_DEFAULT_REGION}}

      - uses: actions/checkout@v2 
      - name: Copy files to S3
        run: |
          aws s3 rm s3://${{env.S3_BUCKET}}/ --recursive
          aws s3 cp --recursive ./CubeJS/schema s3://${{env.S3_BUCKET}}/schema/
          aws s3 cp ./CubeJS/cube.js s3://${{env.S3_BUCKET}}/cube.js

  sync-S3-to-EC2:
    runs-on: ubuntu-latest
    needs: copy_to_S3
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
          S3_BUCKET : ${{secrets.S3_BUCKET}}
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY}}
          HOSTNAME : ${{secrets.HOSTNAME}}
          USER_NAME : ${{secrets.USER_NAME}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY : ${{secrets.AWS_SECRET_ACCESS_KEY}}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            #Now we have got the access of EC2 and we will start the deploy .
            #Please validate all the aws commands to sync the content inside the CubeJS/schema folder
            mkdir -p ./cube-dev-quext/schema
            aws s3 sync s3://${{env.S3_BUCKET}}/schema ./cube-dev-quext/schema
            aws s3 sync s3://${{env.S3_BUCKET}}/cube.js ./cube-dev-quext/cube.js

            #Docker commands to run everytime is a new thing added
            #docker-compose down && docker-compose up -d
          '
